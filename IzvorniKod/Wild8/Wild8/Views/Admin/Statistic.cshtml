@model Wild8.Models.StatisticsModel
@{ 
    Layout = null;
}

@if (Model.TotalTopMeals.Any())
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Statistika</h4>
        </div>
        
        <div class="panel-content container">
            <div id="chartdiv" style="width: 100%; height: 400px; background-color: #FFFFFF;"></div>
            <div id="placeholder"></div>
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3>Ukupna statistika</h3>
                        <h4>Prosječna cijena: @Html.DisplayFor(model => model.TotalAveragePrice) kn<br /></h4>
                        <h4>Najviše naručivana jela:</h4>
                        <ol>
                            @foreach (var meal in Model.TotalTopMeals)
                            {
                                <text><li>@meal.Key x<b />@meal.Value</li></text>
                            }
                        </ol>
                        <h4>Broj narudžbi: @Html.DisplayFor(model => model.TotalNumOfOrders)</h4>
                    </div>
                </div>
            </div>
            <form action="@Url.Action("Report", "Admin")">
                <input class="btn btn-primary" name="reportType" type="submit" value="Spremi Statistiku" />
            </form>
        </div>
    </div>
} else
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Statistika</h4>
        </div>

        <div class="panel-content container">
            <h4>Nema prometa.</h4>
        </div>
    </div>
}

<!-- amCharts javascript sources -->
<script type="text/javascript" src="~/Scripts/ViewScripts/Charts/amcharts.js"></script>
<script type="text/javascript" src="~/Scripts/ViewScripts/Charts/serial.js"></script>
<script type="text/javascript" src="~/Scripts/ViewScripts/Charts/themes/light.js"></script>
<script type="text/javascript" src="~/Scripts/ViewScripts/Charts/lang/hr.js"></script>

<!-- amCharts javascript code -->
<script type="text/javascript">
    var chart = AmCharts.makeChart("chartdiv",
        {
            "type": "serial",
            "language": "hr",
            "categoryField": "date",
            "dataDateFormat": "YYYY-MM",
            "autoMarginOffset": 40,
            "marginRight": 60,
            "marginTop": 60,
            "fontSize": 13,
            "handDrawScatter": 4,
            "theme": "light",
            "categoryAxis": {
                "parseDates": true
            },
            "chartCursor": {
                "enabled": true
            },
            "chartScrollbar": {
                "enabled": true
            },
            "trendLines": [],
            "graphs": [
                {
                    "columnWidth": 25,
                    "cornerRadiusTop": 8,
                    "dashLength": 4,
                    "fillAlphas": 0.51,
                    "id": "AmGraph-1",
                    "lineAlpha": 0.44,
                    "title": "graph 1",
                    "type": "column",
                    "valueField": "orders"
                },
                {
                    "bullet": "square",
                    "bulletBorderAlpha": 1,
                    "bulletBorderThickness": 1,
                    "bulletSize": 16,
                    "id": "AmGraph-2",
                    "lineThickness": 3,
                    "title": "graph 2",
                    "valueField": "column-2"
                }
            ],
            "guides": [],
            "valueAxes": [
                {
                    "id": "ValueAxis-1",
                    "title": ""
                }
            ],
            "allLabels": [],
            "balloon": {},
            "titles": [],
            "dataProvider": [
                @foreach (var pair in Model.OrdersByMonths)
                {
                    <text>
                    {
                        "date": "@pair.Key",
                        "orders": @pair.Value
                        },
                    </text>
                }
            ]
        }
    );

    var monthNames = ["siječanj", "veljača", "ožujak", "travanj", "svibanj", "lipanj",
                "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"];
    var orders = {};

    @{
        foreach (var pair in Model.MonthlyAveragePrices)
        {
            <text>orders["@pair.Key" + "/price"] = @pair.Value</text>
        }

        foreach (var month in Model.TopMealsByMonths)
        {
            int i = 1;
            foreach (var monthMeal in month.Value)
            {
                <text>orders["@month.Key" + "/order" + "@i"] = "@monthMeal.Key x" + "@monthMeal.Value"</text>
                i++;
            }
        }
    }

    function handleClick(event)
    {
        var year = event.item.category.getFullYear();
        var month = event.item.category.getMonth() + 1;
        var monthName = monthNames[month - 1];

        if(month < 10) {
            month = "0" + month;
        }

        var toRemove = document.getElementById("month-info-container");
        var outerDiv = document.createElement("div");
        var innerDiv = document.createElement("div");

        innerDiv.className = "panel-heading";
        innerDiv.id = "month-info-panel";
        outerDiv.className = "panel panel-default";
        outerDiv.id = "month-info-container";
        outerDiv.appendChild(innerDiv);

        var date = year + "-" + month;
        var infoPanel = innerDiv;
        var childNode = document.createElement("h3");

        childNode.appendChild(document.createTextNode("Statistika za " + monthName + ", " + year));
        infoPanel.appendChild(childNode);
        childNode = document.createElement("h4");
        childNode.appendChild(document.createTextNode("Prosječna cijena: " + orders[date + "/price"] + " kn"));
        infoPanel.appendChild(childNode);
        childNode = document.createElement("h4");
        childNode.appendChild(document.createTextNode("Najviše naručivana jela:"));
        infoPanel.appendChild(childNode);
        childNode = document.createElement("ol");

        var listElement = document.createElement("li");
        var order1 = orders[date + "/order1"];
        var order2 = orders[date + "/order2"];
        var order3 = orders[date + "/order3"];

        if (order1 != undefined) {
            listElement.appendChild(document.createTextNode(order1));
            childNode.appendChild(listElement);
            listElement = document.createElement("li");
        }

        if (order2 != undefined) {
            listElement.appendChild(document.createTextNode(order2));
            childNode.appendChild(listElement);
            listElement = document.createElement("li");
        }

        if (order3 != undefined) {
            listElement.appendChild(document.createTextNode(order3));
            childNode.appendChild(listElement);
        }

        infoPanel.appendChild(childNode);
        childNode = document.createElement("h4");
        childNode.appendChild(document.createTextNode("Broj narudžbi: " + event.item.values.value));
        infoPanel.appendChild(childNode);

        if (toRemove != null) {
            $("#month-info-container").slideToggle("slow", function(){
                toRemove.remove();

                $("#placeholder").append(outerDiv);
                $("#month-info-container").hide();
                $("#month-info-container").slideToggle(1000);
            });
        } else {
            $("#placeholder").append(outerDiv);
            $("#month-info-container").hide();
            $("#month-info-container").slideToggle(1000);
        }

    }

    chart.addListener("clickGraphItem", handleClick);
</script>

